Results for unittest1:
--------Testing compare() Function--------
Test 1: a = 1, b = 2, result should be -1
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: a = 2, b = 1, result should be 1
TEST SUCCESSFULLY COMPLETED - PASS

Test 3: a = 2, b = 2, result should be 0
TEST SUCCESSFULLY COMPLETED - PASS
End of unittest1.

Results for unittest2:
------Testing initializeGame() Function------
Test 1: initialize 10 unique Kingdom Cards and 2 players.
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: initialize 2 duplicate Kingdom Cards and 2 players.
Expected result should throw an error.
TEST SUCCESSFULLY COMPLETED - PASS
This correctly resulted in an error for duplicate K card.

Test 3: initialize only 9 Kingdom Cards and 2 players.
Expected result should throw an error.
TEST FAILED

Test 4: initialize game with 5 players, which exceeds the max allowed.
Expected result should throw an error.
TEST SUCCESSFULLY COMPLETED - PASS
End of unittest2.

Results for unittest3:
-----------Testing getCost() Function------------
Test 1: get cost for Curse card. Expected cost is 0.
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: get cost for Estate card. Expected cost is 2.
TEST SUCCESSFULLY COMPLETED - PASS

Test 3: get cost for Treasure_map card. Expected cost is 4.
TEST SUCCESSFULLY COMPLETED - PASS

Test 4: request card out of enum range. Result should be -1 error.
TEST SUCCESSFULLY COMPLETED - PASS
End of unittest3.

Results for unittest4:
-----------Testing shuffle() Function----------
Test 1: shuffle and confirm it completed successfully. Expect return 0.
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: check player 1 cards in hand. Should be 5 cards in hand.
TEST SUCCESSFULLY COMPLETED - PASS

Test 3: check player 1 played cards. Should be 0 cards played.
TEST SUCCESSFULLY COMPLETED - PASS

Test 4: check player 1 discard count. Should be 0 cards discarded.
TEST SUCCESSFULLY COMPLETED - PASS

Test 5: cards held for player out of range. Should return an error.
TEST FAILED. This should return an error
Result: 0 
End of unittest4.

Results for cardtest1:
-------------Testing Smithy Card---------------
Test 1: current player should receive 3 cards
player 1 card count before call to smithy: 5
player 1 card count after call to smithy: 6
TEST FAILED. Count did not increase by 3.

Test 2: current player discard should occur.
Player 1 discard count before call to smithy: 0
Player 1 discard count after call to smithy: 0
TEST FAILED. Discard count did not change.
End of cardtest1.

Results for cardtest2:
-------------Testing Adventurer Card---------------
Test 1: discard card should increase.
player 1 discard count before call to adventurer: 0
player 1 discard count after call to adventurer: 6
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: card count should change.
Player 1 card count before call to adventurer: 5
Player 1 card count after call to adventurer: 6
TEST SUCCESSFULLY COMPLETED - PASS
End of cardtest2.

Results for cardtest3:
-------------Testing Village Card---------------
Test 1: actions should increase by 2.
Player 1 actions before call to village: 1
Player 1 actions after call to village: 3
TEST SUCCESSFULLY COMPLETED - PASS

Test 2: card count should increase by 1.
Player 1 card count before call to village: 5
Player 1 card count after call to village: 5
TEST FAILED. Card count did not increase by 1.

End of cardtest3.

Results for cardtest4:
-------------Testing Great Halls Card---------------
Test 1: actions should increase by 2.
Player 1 actions before call to great_halls: 1
Player 1 actions after call to great_halls: 0
TEST FAILED. Actions did not increase by 2.


Test 2: card count should increase by 1.
Player 1 card count before call to great_halls: 5
Player 1 card count after call to great_halls: 5
TEST FAILED. Card count did not increase by 1.


End of cardtest4.

Function 'updateCoins'
Lines executed:81.82% of 11
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

Function 'gainCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 1

Function 'discardCard'
Lines executed:84.62% of 13
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
No calls

Function 'cardEffect'
Lines executed:0.00% of 212
Branches executed:0.00% of 179
Taken at least once:0.00% of 179
Calls executed:0.00% of 58

Function 'cardVillage'
Lines executed:100.00% of 5
No branches
Calls executed:100.00% of 2

Function 'cardGreat_halls'
Lines executed:100.00% of 5
No branches
Calls executed:100.00% of 2

Function 'cardCouncil_room'
Lines executed:0.00% of 9
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'cardSmithy'
Lines executed:100.00% of 5
Branches executed:100.00% of 2
Taken at least once:100.00% of 2
Calls executed:100.00% of 2

Function 'cardAdventurer'
Lines executed:60.00% of 15
Branches executed:66.67% of 12
Taken at least once:41.67% of 12
Calls executed:50.00% of 2

Function 'getCost'
Lines executed:20.00% of 30
Branches executed:100.00% of 28
Taken at least once:14.29% of 28
No calls

Function 'drawCard'
Lines executed:36.36% of 22
Branches executed:33.33% of 6
Taken at least once:16.67% of 6
Calls executed:0.00% of 1

Function 'getWinners'
Lines executed:0.00% of 24
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
Calls executed:0.00% of 2

Function 'scoreFor'
Lines executed:0.00% of 24
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:0.00% of 20
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'whoseTurn'
Lines executed:0.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:0.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:0.00% of 2
No branches
Calls executed:0.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:93.75% of 16
Branches executed:100.00% of 8
Taken at least once:87.50% of 8
Calls executed:100.00% of 2

Function 'initializeGame'
Lines executed:87.10% of 62
Branches executed:95.65% of 46
Taken at least once:82.61% of 46
Calls executed:100.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:100.00% of 6
Branches executed:100.00% of 4
Taken at least once:100.00% of 4
No calls

File 'dominion.c'
Lines executed:23.62% of 563
Branches executed:26.38% of 417
Taken at least once:16.79% of 417
Calls executed:14.74% of 95
Creating 'dominion.c.gcov'

